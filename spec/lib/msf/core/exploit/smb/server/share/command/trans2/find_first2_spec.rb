# -*- coding:binary -*-
require 'spec_helper'

require 'msf/core'
require 'msf/core/exploit/smb/server/share'
require 'rex/proto/smb/constants'

describe Msf::Exploit::Remote::SMB::Server::Share do

  subject(:mod) do
    mod = Msf::Exploit.new
    mod.extend described_class
    mod.send(:initialize)

    mod
  end

  let(:client_string) { '' }
  let(:client) { StringIO.new(client_string) }

  let(:valid_find_file_names_info_request) do
    ""
  end

  let(:valid_find_file_both_directory_info_request) do
    ""
  end

  let(:valid_find_file_full_directory_info_request) do
    ""
  end

  before(:each) do
    mod.instance_variable_set('@state', {
      client => {
        :multiplex_id => 0x41424344,
        :process_id   => 0x45464748,
        :file_id      => 0xdead,
        :dir_id       => 0xbeef
      }
    })
    mod.lo = 0
    mod.hi = 0
    mod.share = 'test'
    mod.path_name = "\\"
    mod.file_name = 'test.exe'
    mod.file_contents = 'metasploit'

    allow_any_instance_of(::StringIO).to receive(:put) do |io, data|
      io.write(data)
    end
  end

  describe "#smb_cmd_trans2_find_first2" do

    context "when valid SMB_FIND_FILE_BOTH_DIRECTORY_INFO request" do

    end
  end

end


