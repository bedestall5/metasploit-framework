require 'spec_helper'

RSpec.describe Msf::Exploit::Retry do

  def create_exploit(info = {})
    mod = Msf::Exploit.allocate
    mod.extend described_class
    mod.send(:initialize, info)
    mod
  end

  describe '#retry_until_true' do
    let(:timeout) { Proc.new { false } }

    subject do
      create_exploit
    end

    it 'does not call the block if the timeout is negative' do
      expect { |b| subject.retry_until_true(timeout: -1, &b) }.to_not yield_control
    end

    it 'does call the block if the timeout is positive' do
      expect { |b| subject.retry_until_true(timeout: 1, &b) }.to yield_with_no_args
    end

    it 'returns false when the timeout elapses' do
      expect(subject.retry_until_true(timeout: 1, &timeout)).to eq false
    end

    it 'returns the block result' do
      result = Object.new
      expect(subject.retry_until_true(timeout: 1, &Proc.new { result })).to eq result
    end
  end
end
