##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'OpenMRS Java Deserialization RCE',
      'Description'    => %q(
      ),
      'License'        => MSF_LICENSE,
      'Author'         =>
      [
        'Nicola Serra', # Vuln Discovery and PoC
        'mpgn',         # PoC
        'Shelby Pace'   # Metasploit Module
      ],
      'References'     =>
       [
         [ 'CVE', '2018-19276' ],
         [ 'URL', 'https://talk.openmrs.org/t/critical-security-advisory-cve-2018-19276-2019-02-04/21607' ],
         [ 'URL', 'https://github.com/mpgn/CVE-2018-19276/' ]
       ],
      'Payload'        => { },
      'Targets'        =>
       [
        [ '', { } ]
       ],
      'DisclosureDate' => "2019-02-04",
      'DefaultTarget'  => 0
    ))

    register_options(
    [
        OptString.new('TARGETURI', [ true, 'Base URI for OpenMRS', '/' ])
    ])
  end

  def check
    res = send_request_cgi!('method' => 'GET', 'uri' => normalize_uri(target_uri.path))
    return CheckCode::Unknown("OpenMRS page unreachable.") unless res

    return CheckCode::Safe('Page discovered is not OpenMRS.') unless res.body.include?('OpenMRS')
    response = res.get_html_document
    version = response.at('body//h3')
    return CheckCode::Detected('Successfully identified OpenMRS, but cannot detect version') unless version && version.text

    version_no = version.text
    version_no = version_no.match(/\d\.\d+\.\d*/)
    return CheckCode::Detected('Successfully identified OpenMRS, but cannot detect version') unless version_no

    version_no = Gem::Version.new(version_no)
    not_vuln = Gem::Version.new('2.1.4')

    return CheckCode::Appears("OpenMRS platform version: #{version_no}") if (version_no < not_vuln) && ![ Gem::Version.new('1.11.8'), Gem::Version.new('1.11.9') ].include?(version_no)

    CheckCode::Detected
  end

  def exploit

  end
end
