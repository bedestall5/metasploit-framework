module ExploitServlet

  def self.api_path
    '/api/v1/exploits'
  end

  def self.registered(app)
    app.get ExploitServlet.api_path, &get_exploit
    app.post ExploitServlet.api_path, &report_exploit
  end

  #######
  private
  #######

  def self.get_exploit
    lambda {
      begin
        sanitized_params = sanitize_params(params)
        data = get_db.exploits(sanitized_params)
        set_json_response(data)
      rescue => e
        set_error_on_response(e)
      end
    }
  end

  def self.report_exploit
    lambda {
      job = lambda { |opts|
        case opts[:exploit_report_type]
          when "attempt"
            get_db().report_exploit_attempt(opts[:host], opts)
          when "failure"
            get_db().report_exploit_failure(opts)
          when "success"
            get_db().report_exploit_success(opts)
        end
        get_db().report_host(opts)
      }
      exec_report_job(request, &job)
    }
  end


end
