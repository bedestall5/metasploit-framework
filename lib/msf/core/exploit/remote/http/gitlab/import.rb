# -*- coding: binary -*-

# GitLab import mixin
module Msf::Exploit::Remote::HTTP::Gitlab::Import
  # Import a repository from a remote URL
  #
  # @return [String,nil] Import ID if succefull enqueue, nil otherwise
  def gitlab_import_github_repo(group_name, github_hostname, api_token)
    res = send_request_cgi({
      'method' => 'POST',
      'uri' => '/api/v4/import/github',
      'ctype' => 'application/json',
      'headers' => {
        'PRIVATE-TOKEN' => api_token
      },
      'data' => {
        'personal_access_token' => Rex::Text.rand_text_alphanumeric(8),
        'repo_id' => rand(1000),
        'target_namespace' => group_name,
        'new_name' => "gh-import-#{rand(1000)}",
        'github_hostname' => github_hostname
      }.to_json
    })

    # 422 is returned if the import failed, but the response body contains the error message
    raise Msf::Exploit::Remote::HTTP::Gitlab::Error::ImportError, JSON.parse(res.body)['errors'] if res&.code == 422
    # 201 is returned if the import was successfully enqueued
    raise Msf::Exploit::Remote::HTTP::Gitlab::Error::ImportError, 'Import failed' unless res&.code == 201

    id = JSON.parse(res.body)['id']

    return id if id

    nil
  end
end
