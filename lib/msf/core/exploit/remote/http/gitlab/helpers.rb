# -*- coding: binary -*-

# GitLab helpers mixin
module Msf::Exploit::Remote::HTTP::Gitlab::Helpers
  # Helper methods are private and should not be called by modules

  private

  # Returns the POST data for a Gitlab login request
  #
  # @param user [String] Username
  # @param pass [String] Password
  # @param csrf_token [String] CSRF token
  # @return [Hash] The post data for vars_post Parameter
  def gitlab_helper_login_post_data(user, pass, csrf_token)
    post_data = {
      'utf8' => 'âœ“',
      'authenticity_token' => csrf_token,
      'user[login]' => user,
      'user[password]' => pass,
      'user[remember_me]' => 0
    }
    post_data
  end

  def gitlab_helper_extract_csrf_token(path:, regex:)
    res = send_request_cgi({
      'method' => 'GET',
      'uri' => path,
      'keep_cookies' => true
    })

    if res.nil? || res.body.nil?
      raise Msf::Exploit::Remote::HTTP::Gitlab::GitLabClientException, 'Empty response. Please validate RHOST'
    elsif res.code != 200
      raise Msf::Exploit::Remote::HTTP::Gitlab::GitLabClientException, "#{__method__} Unexpected HTTP #{res.code} response."
    end

    token = res.body[regex, 1]
    if token.nil?
      raise Msf::Exploit::Remote::HTTP::Gitlab::GitLabClientException, 'Could not successfully extract CSRF token'
    end

    token
  end
end
