# -*- coding: binary -*-

# GitLab version mixin
module Msf::Exploit::Remote::HTTP::Gitlab::Version
  # Used to check if the version is correct: must contain at least one dot
  GITLAB_VERSION_PATTERN = '(\d+\.\d+(?:\.\d+)*)'.freeze

  # Extracts the Gitlab version information from various sources
  #
  # @return [String,nil] Gitlab version if found, nil otherwise
  def gitlab_version
    res = send_request_cgi({
      'method' => 'GET',
      'uri' => '/api/v4/version',
      'keep_cookies' => true
    })

    if res.nil? || res.body.nil?
      raise Msf::Exploit::Remote::HTTP::Gitlab::GitLabClientException, 'Empty response. Please validate RHOST'
    elsif res.code != 200
      raise Msf::Exploit::Remote::HTTP::Gitlab::GitLabClientException, "#{__method__} Unexpected HTTP #{res.code} response."
    end

    version = Rex::Version.new(
      JSON.parse(
        res.body
      )['version'][Regexp.new(GITLAB_VERSION_PATTERN), 1]
    )

    return version if version

    nil
  end
end
