require 'Msgpack'

module Msf
  module Exploit::Remote::BrowserProfileManager

    public

    # Default prefix
    def note_type_prefix
      raise NoMethodError, "A mixin that's using BrowserProfileManager should define note_type_prefix"
    end

    def get_profile_info(tag)
      normalized_tag = "#{note_type_prefix}.#{tag}"
      framework.db.notes.each do |note|
        return MessagePack.unpack(note.data) if note.ntype == normalized_tag 
      end

      {}
    end

    def update_profile(tag, key, value)
      profile = get_profile_info(tag)
      if profile.empty?
        init_profile(tag)
        profile = get_profile_info(tag)
      end

      normalized_tag = "#{note_type_prefix}.#{tag}"
      profile[normalized_tag][key.to_s] = value
      framework.db.report_note(
        :type => normalized_tag,
        :data => profile.to_msgpack,
        :update => :unique
      )
    end

    def init_profile(tag)
      normalized_tag = "#{note_type_prefix}.#{tag}"
      empty_profile = { normalized_tag => {} }
      framework.db.report_note(
        :type => normalized_tag,
        :data => empty_profile.to_msgpack,
        :update => :unique
      )
    end

  end
end
