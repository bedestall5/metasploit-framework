
module Msf
  module Exploit::AutoTarget

    def auto_target?
      selected_target = targets[target_index]
      if selected_target.name =~ /Automatic/
        true
      else
        false
      end
    end

    def select_target
      return nil unless auto_target?
      host_record = target_host
      return nil if host_record.nil?
      potential_targets = filter_by_os_name(host_record)

    end

    def target_host
      return nil unless self.respond_to?(:rhost)
      return nil unless framework.db.active
      current_workspace = framework.db.find_workspace(self.workspace)
      current_workspace.hosts.where(address: rhost).first
    end

    def filter_by_os_name(host_record)
      return [] if host_record.os_name.blank?
      filtered_targets = targets.collect do |target|
        if target.name =~ /#{host_record.os_name}/
          target
        else
          nil
        end
      end
      filtered_targets.compact
    end

    def filter_by_os_flavor(potential_targets, host_record)
      return potential_targets if host_record.os_flavor.blank?
      potential_targets
    end
  end
end