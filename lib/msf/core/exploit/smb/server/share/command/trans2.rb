# -*- coding: binary -*-

module Msf
  module Exploit::Remote::SMB::Server
    module Share
      module Command
        module Trans2
          require 'msf/core/exploit/smb/server/share/command/trans2/find_first2'
          require 'msf/core/exploit/smb/server/share/command/trans2/query_file_information'
          require 'msf/core/exploit/smb/server/share/command/trans2/query_path_information'

          #
          # Responds to client TRANSACTION2 requests and dispatches the request off to
          # other functions dependent on what the sub_command is. Commands supported
          # include:
          #  QUERY_FILE_INFO (Basic, Standard and Internal)
          #  QUERY_PATH_INFO (Basic and Standard)
          #
          def smb_cmd_trans(c, buff)
            pkt = CONST::SMB_TRANS2_PKT.make_struct
            pkt.from_s(buff)

            data_trans2 = CONST::SMB_DATA_TRANS2.make_struct
            data_trans2.from_s(pkt['Payload'].v['SetupData'])

            sub_command = data_trans2.v['SubCommand']
            parameters = data_trans2.v['Parameters'].gsub(/^[\x00]*/, '') #delete padding

            case sub_command
            when CONST::TRANS2_QUERY_FILE_INFO
              smb_cmd_trans2_query_file_information(c, parameters)
            when CONST::TRANS2_QUERY_PATH_INFO
              smb_cmd_trans2_query_path_information(c, parameters)
            when CONST::TRANS2_FIND_FIRST2
              smb_cmd_trans2_find_first2(c, parameters)
            else
              smb_error(CONST::SMB_COM_TRANSACTION2, c, CONST::SMB_NT_STATUS_NOT_FOUND, true)
            end
          end

        end
      end
    end
  end
end
