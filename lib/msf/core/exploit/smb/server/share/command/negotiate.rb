# -*- coding: binary -*-

module Msf
  module Exploit::Remote::SMB::Server
    module Share
      module Command
        module Negotiate
          #
          # Negotiates a SHARE session with the client
          #
          def smb_cmd_negotiate(c, buff)
            pkt = CONST::SMB_NEG_PKT.make_struct
            pkt.from_s(buff)

            dialects = pkt['Payload'].v['Payload'].gsub(/\x00/, '').split(/\x02/).grep(/^\w+/)
            dialect = dialects.index("NT LM 0.12") || dialects.length-1

            pkt = CONST::SMB_NEG_RES_NT_PKT.make_struct
            smb_set_defaults(c, pkt)

            pkt['Payload']['SMB'].v['Command'] = CONST::SMB_COM_NEGOTIATE
            pkt['Payload']['SMB'].v['Flags1'] = FLAGS
            pkt['Payload']['SMB'].v['Flags2'] = FLAGS2
            pkt['Payload']['SMB'].v['WordCount'] = 17
            pkt['Payload'].v['Dialect'] = dialect
            pkt['Payload'].v['SecurityMode'] = CONST::NEG_SECURITY_PASSWORD
            pkt['Payload'].v['MaxMPX'] = 50
            pkt['Payload'].v['MaxVCS'] = 1
            pkt['Payload'].v['MaxBuff'] = 4356
            pkt['Payload'].v['MaxRaw'] = 65536
            pkt['Payload'].v['SystemTimeLow'] = lo
            pkt['Payload'].v['SystemTimeHigh'] = hi
            pkt['Payload'].v['ServerTimeZone'] = 0x0
            pkt['Payload'].v['SessionKey'] = 0
            pkt['Payload'].v['Capabilities'] = CAPABILITIES
            pkt['Payload'].v['KeyLength'] = 8
            pkt['Payload'].v['Payload'] = Rex::Text.rand_text_hex(8)

            c.put(pkt.to_s)
          end
        end
      end
    end
  end
end
