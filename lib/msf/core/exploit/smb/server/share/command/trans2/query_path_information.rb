# -*- coding: binary -*-

module Msf
  module Exploit::Remote::SMB::Server
    module Share
      module Command
        module Trans2
          # This mixin provides methods to handle TRAN2_QUERY_PATH_INFORMATION subcommands
          module QueryPathInformation
            def smb_cmd_trans2_query_path_information(c, buff)
              dprint("[smb_cmd_trans2_query_path_information]")
              ar = Rex::Text.to_hex(buff, '').to_s
              loi = ar[144..147].unpack('n*').reverse.pack('n*').to_i(16)

              case loi
              when CONST::SMB_QUERY_FILE_BASIC_INFO, CONST::SMB_QUERY_FILE_BASIC_INFO_ALIAS, CONST::SMB_SET_FILE_BASIC_INFO_ALIAS
                dprint("\t\t[query_file_info_basic]")
                smb_cmd_trans_query_path_info_basic(c, buff)
              when CONST::SMB_QUERY_FILE_STANDARD_INFO, CONST::SMB_QUERY_FILE_STANDARD_INFO_ALIAS
                dprint("\t\t[query_file_info_standard]")
                #smb_cmd_trans_query_file_info_standard(c, buff)
                smb_cmd_trans_query_path_info_standard(c, buff)
              else
                dprint("\t\tUnknown LOI [smb_cmd_trans_query_path_info_basic] - #{loi.to_s}")
                #TODO: SEND ERROR IF IT'S AN UKNNOWN REQUEST....
                smb_error(CONST::SMB_COM_TRANSACTION2, c, CONST::SMB_STATUS_SUCCESS)
              end
            end
          end
        end
      end
    end
  end
end
