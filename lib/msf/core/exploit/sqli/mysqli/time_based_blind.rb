require 'msf/core/exploit/sqli/utils/time_based_blind'

#
#   Time-Based Blind SQL injection support for MySQL
#
class Msf::Exploit::SQLi::MySQLi::TimeBasedBlind < Msf::Exploit::SQLi::MySQLi::Common
  include ::Msf::Exploit::SQLi::TimeBasedBlindMixin

  def initialize(datastore, framework, user_output, opts = {}, &query_proc)
    @sleepdelay = datastore['SqliDelay'] || 1
    @sleepfunc = 'sleep'
    super
  end

  #
  # This method checks if the target is vulnerable to Blind time-based injection by checking if
  # the target sleeps only when a given condition is true.
  #
  def test_vulnerable
    # run_sql and check if output is what's expected, or just check for delays?
    out_true = blind_request("if(1=1,sleep(#{datastore['SqliDelay']}),0)")
    out_false = blind_request("if(1=2,sleep(#{datastore['SqliDelay']}),0)")
    out_true && !out_false
  end
end
